{
  "name": "ESP32 - SW DEV",
  "build": {
    "dockerfile": "Dockerfile",
    "context": "..",
    "args": { "USERNAME": "root", "USER_UID": "1000", "USER_GID": "1000" }
  },

  "settings": { "terminal.integrated.defaultProfile.linux": "bash" },

  "extensions": [
    "espressif.esp-idf-extension",
    "vsciot-vscode.vscode-arduino",
    "ms-vscode.cpptools",
    "eamodio.gitlens"
  ],

  "remoteUser": "root",

  "mounts": [
    "source=${localEnv:HOME}/.ssh,target=/tmp/host-ssh,type=bind,consistency=cached,readonly",
    "source=${localEnv:HOME}/.gitconfig,target=/root/.gitconfig,type=bind,consistency=cached,readonly"
  ],

  "postCreateCommand": "/bin/bash -lc \"set -euxo pipefail; echo 'source /opt/esp/idf/export.sh' >> ~/.bashrc; mkdir -p /root/.ssh; cp -a /tmp/host-ssh/. /root/.ssh/ 2>/dev/null || true; chown -R root:root /root/.ssh; chmod 700 /root/.ssh; for f in /root/.ssh/config /root/.ssh/known_hosts /root/.ssh/id_rsa /root/.ssh/raspberrypi /root/.ssh/id_ed25519; do [ -f \\\"$f\\\" ] && chmod 600 \\\"$f\\\"; done; for f in /root/.ssh/id_rsa.pub /root/.ssh/raspberrypi.pub /root/.ssh/id_ed25519.pub; do [ -f \\\"$f\\\" ] && chmod 644 \\\"$f\\\"; done; source $HOME/.cargo/env 2>/dev/null || true; if ! command -v cargo >/dev/null 2>&1; then curl -fsSL https://sh.rustup.rs | sh -s -- -y --default-toolchain stable; source $HOME/.cargo/env; fi; cargo install esp-generate --locked; cargo install espflash --locked; cargo install esp-config --features=tui --locked; cargo install --locked espup || true; espup install --targets esp32,esp32s3,esp32c3 --export-file $HOME/export-esp.sh; echo 'source $HOME/export-esp.sh' >> ~/.bashrc; source $HOME/export-esp.sh; echo 'Dev container ready for ESP (toolchain esp + esp-generate + espflash + esp-config)'; cargo install probe-rs-tools --locked --force;\"",

  "remoteEnv": {
    "IDF_PATH": "/opt/esp/idf",
    "PATH": "/opt/esp/idf/tools:${env:PATH}"
  },

  "runArgs": [
    "--network=host",
    "--dns=192.168.10.1"
  ]
}
